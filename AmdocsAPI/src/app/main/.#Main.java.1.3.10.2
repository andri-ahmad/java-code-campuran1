package app.main;

// local classes
import util.Lock;
import util.Login;
import util.Parameters;
import util.PrintOutput;
import amdocs.amsp.Configuration;
import amdocs.amsp.exception.AmspServiceException;
import amdocs.amsp.services.CustomerFacade;
import amdocs.amsp.valueobject.customer.CustomerDetailsVO;

/**
 * @author JVANHOOF
 *  Driver class for API Testing. Minor additions and changes should be made here
 *  to access the target test class(es)
 */
public class Main {	

	public static void main(String[] args) {
		Configuration.appName = Configuration.AMSP_API_APP_NAME;

		// variables
		boolean session;			// login session flag
		
		// locking flags
		boolean APC_lock   = false;
		boolean siteLock   = false;
		boolean acctLock   = false;
		boolean varLock    = false;
		
		// create utility objects
		Login login             = new Login();
		PrintOutput printOutput = new PrintOutput();
		Parameters apiParams    = new Parameters();
		
		// initialize utility objects
		printOutput.initOutput(apiParams, printOutput);
		apiParams.initParameters(Parameters.TEMP_OPERATION, apiParams, printOutput);
		
		// API test objects - add/expose current test objects
		CustomerFacade customerFacade = new CustomerFacade();
		CustomerDetailsVO customerDetailsVO = new CustomerDetailsVO();
			
		// attempt login
		session = login.logInOut(login.LOGIN(), apiParams, printOutput);
		
		// operation
		if (session){
			// lock - expose whichever lock types are needed for operation
			Lock lock = new Lock();
			APC_lock  = lock.checkAPC_lock(apiParams, login, printOutput);
			//acctLock  = lock.lockIt(lock.LOCK(), lock.ACCOUNT(),  apiParams, login.getTicket(), printOutput);
			//siteLock  = lock.lockIt(lock.LOCK(), lock.SITE(),     apiParams, login.getTicket(), printOutput);
			//varLock   = lock.lockIt(lock.LOCK(), lock.VARIABLE(), apiParams, login.getTicket(), printOutput);

			// Get, set and update data
			if (!APC_lock){
				try {
					customerDetailsVO = customerFacade.getCustomerDetail ("40615201",
																		  false, // This flag decides whether credit card details will be present in the output customerDetails 
																		  "99517", 
																		  login.getTicket());
					
					if (customerDetailsVO != null) {
						printOutput.printToShell(apiParams, 
												 "<customerDetailsVO>" +	customerDetailsVO.toString() + "</CustomerDetailsVO>",
												 customerDetailsVO.toXml());
					}
					else {
						printOutput.printToShell(apiParams, "<customerDetailsVO> is null", null);
					}
					
				}
				catch (AmspServiceException e) 	{
					printOutput.printExceptionToShell(apiParams, "main", e);
				}
				catch (NullPointerException e) {
		        	printOutput.printToShell(apiParams,"Caught NullPointerException", null);
		        }
			}
					
			// always unlock all
	 		if (acctLock || siteLock || varLock){lock.lockIt(lock.UNLOCK(), lock.ALL(), apiParams, login.getTicket(), printOutput);}
	 		
			// logout
	 		login.logInOut(login.LOGOUT(), apiParams, printOutput);
	 			
	 		printOutput.printToShell(apiParams, "\nClose this window to end session", null);
		}
		
		// hold here until user closes output window
		while (!printOutput.shell.isDisposed()) {
			if (!printOutput.display.readAndDispatch()) printOutput.display.sleep(); 
		}
		
		//cleanup display and print file
		printOutput.finishOutput(apiParams, printOutput);
	} // end of main
} // end of class Main
